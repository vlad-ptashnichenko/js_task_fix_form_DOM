{"version":3,"sources":["scripts/main.js"],"names":["inputs","document","querySelectorAll","label","createElement","className","input","textContent","gap","name","htmlFor","id","before","cloneNode","placeholder","charAt","toUpperCase","slice","word","arr","split","indexUpperLetter","findIndex","letter","toLowerCase","splice","join"],"mappings":";AAAA,aA6BC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA3BD,IAAMA,EAASC,SAASC,iBAAiB,SACnCC,EAAQF,SAASG,cAAc,SAErCD,EAAME,UAAY,cAEEL,IAsBnB,EAtBmBA,EAAAA,EAAAA,GAsBnB,IAtB2B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjBM,IAAAA,EAAiB,EAAA,MAC1BH,EAAMI,YAAcC,EAAIF,EAAMG,MAC9BN,EAAMO,QAAUJ,EAAMK,GACtBL,EAAMM,OAAOT,EAAMU,WAAU,IAE7BP,EAAMQ,YAAeR,EAAMG,KAAKM,OAAO,GAAGC,cACtCR,EAAIF,EAAMG,MAAMQ,MAAM,IAgB3B,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAbD,SAAST,EAAIU,GACLC,IAAAA,EAAMD,EAAKE,MAAM,IACjBC,EAAmBF,EAAIG,UAAU,SAAAC,GAAUA,OAAAA,IAC3CA,EAAOC,gBAGTH,OAAsB,IAAtBA,EACKH,GAEPC,EAAIM,OAAOJ,EAAkB,EAAG,KAEzBF,EAAIO,KAAK","file":"main.bd9dbe46.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst inputs = document.querySelectorAll('input');\nconst label = document.createElement('label');\n\nlabel.className = 'field-label';\n\nfor (const input of inputs) {\n  label.textContent = gap(input.name);\n  label.htmlFor = input.id;\n  input.before(label.cloneNode(true));\n\n  input.placeholder = (input.name.charAt(0).toUpperCase()\n    + gap(input.name).slice(1));\n}\n\nfunction gap(word) {\n  const arr = word.split('');\n  const indexUpperLetter = arr.findIndex(letter => letter\n    !== letter.toLowerCase()\n  );\n\n  if (indexUpperLetter === -1) {\n    return word;\n  } else {\n    arr.splice(indexUpperLetter, 0, ' ');\n\n    return arr.join('');\n  }\n}\n"]}